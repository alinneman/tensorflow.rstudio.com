---
execute:
  freeze: true
---

[R/metrics.R](https://github.com/rstudio/keras//blob/main/R/metrics.R#L1246) 

# metric_sparse_categorical_accuracy

## Calculates how often predictions match integer labels

## Description
 Calculates how often predictions match integer labels 


## Usage
```r
 
metric_sparse_categorical_accuracy( 
  y_true, 
  y_pred, 
  ..., 
  name = "sparse_categorical_accuracy", 
  dtype = NULL 
) 
```

## Arguments
|Arguments|Description|
|---|---|
| y_true | Tensor of true targets. |
| y_pred | Tensor of predicted targets. |
| ... | Passed on to the underlying metric. Used for forwards and backwards compatibility. |
| name | (Optional) string name of the metric instance. |
| dtype | (Optional) data type of the metric result. |

## Details

 ```

acc = k_dot(sample_weight, y_true == k_argmax(y_pred, axis=2)) 

```  You can provide logits of classes as `y_pred`, since argmax of logits and probabilities are same.  This metric creates two local variables, `total` and `count` that are used to compute the frequency with which `y_pred` matches `y_true`. This frequency is ultimately returned as `sparse categorical accuracy`: an idempotent operation that simply divides `total` by `count`.  If `sample_weight` is `NULL`, weights default to 1. Use `sample_weight` of 0 to mask values. 


## Value
 If `y_true` and `y_pred` are missing, a (subclassed) `Metric` instance is returned. The `Metric` object can be passed directly to `compile(metrics = )` or used as a standalone object. See `?Metric` for example usage.  Alternatively, if called with `y_true` and `y_pred` arguments, then the computed case-wise values for the mini-batch are returned directly. 



## See Also
 Other metrics:  `custom_metric()`, `metric_accuracy()`, `metric_auc()`, `metric_binary_accuracy()`, `metric_binary_crossentropy()`, `metric_categorical_accuracy()`, `metric_categorical_crossentropy()`, `metric_categorical_hinge()`, `metric_cosine_similarity()`, `metric_false_negatives()`, `metric_false_positives()`, `metric_hinge()`, `metric_kullback_leibler_divergence()`, `metric_logcosh_error()`, `metric_mean_absolute_error()`, `metric_mean_absolute_percentage_error()`, `metric_mean_iou()`, `metric_mean_relative_error()`, `metric_mean_squared_error()`, `metric_mean_squared_logarithmic_error()`, `metric_mean_tensor()`, `metric_mean_wrapper()`, `metric_mean()`, `metric_poisson()`, `metric_precision_at_recall()`, `metric_precision()`, `metric_recall_at_precision()`, `metric_recall()`, `metric_root_mean_squared_error()`, `metric_sensitivity_at_specificity()`, `metric_sparse_categorical_crossentropy()`, `metric_sparse_top_k_categorical_accuracy()`, `metric_specificity_at_sensitivity()`, `metric_squared_hinge()`, `metric_sum()`, `metric_top_k_categorical_accuracy()`, `metric_true_negatives()`, `metric_true_positives()` 


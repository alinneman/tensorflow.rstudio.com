---
execute:
  freeze: true
---

[R/applications.R](https://github.com/rstudio/keras//blob/main/R/applications.R#L79) 

# application_xception

## Instantiates the Xception architecture

## Description
 Instantiates the Xception architecture 


## Usage
```r
 
application_xception( 
  include_top = TRUE, 
  weights = "imagenet", 
  input_tensor = NULL, 
  input_shape = NULL, 
  pooling = NULL, 
  classes = 1000, 
  classifier_activation = "softmax", 
  ... 
) 
 
xception_preprocess_input(x) 
```

## Arguments
|Arguments|Description|
|---|---|
| include_top | Whether to include the fully-connected layer at the top of the network. Defaults to `TRUE`. |
| weights | One of `NULL` (random initialization), `'imagenet'` (pre-training on ImageNet), or the path to the weights file to be loaded. Defaults to `'imagenet'`. |
| input_tensor | Optional Keras tensor (i.e. output of `layer_input()`) to use as image input for the model. |
| input_shape | optional shape list, only to be specified if `include_top` is FALSE (otherwise the input shape has to be `(299, 299, 3)`. It should have exactly 3 inputs channels, and width and height should be no smaller than 71. E.g. `(150, 150, 3)` would be one valid value. |
| pooling | Optional pooling mode for feature extraction when `include_top` is `FALSE`. Defaults to `NULL`.  <br>- `NULL` means that the output of the model will be the 4D tensor output of the last convolutional layer. <br>- `'avg'` means that global average pooling will be applied to the output of the last convolutional layer, and thus the output of the model will be a 2D tensor. <br>- `'max'` means that global max pooling will be applied.  |
| classes | Optional number of classes to classify images into, only to be specified if `include_top` is TRUE, and if no `weights` argument is specified. Defaults to 1000 (number of ImageNet classes). |
| classifier_activation | A string or callable. The activation function to use on the "top" layer. Ignored unless `include_top = TRUE`. Set `classifier_activation = NULL` to return the logits of the "top" layer. Defaults to `'softmax'`. When loading pretrained weights, `classifier_activation` can only be `NULL` or `"softmax"`. |
| ... | For backwards and forwards compatibility |
| x | `preprocess_input()` takes an array or floating point tensor, 3D or 4D with 3 color channels, with values in the range `[0, 255]`. |

## Details
 For image classification use cases, see [this page for detailed examples](https://keras.io/api/applications/#usage-examples-for-image-classification-models).  For transfer learning use cases, make sure to read the [guide to transfer learning & fine-tuning](https://keras.io/guides/transfer_learning/).  The default input image size for this model is 299x299. 

## Section

## Reference

   

- [Xception: Deep Learning with Depthwise Separable Convolutions](https://arxiv.org/abs/1610.02357) (CVPR 2017) 

 


## Note
 Each Keras Application typically expects a specific kind of input preprocessing. For Xception, call `xception_preprocess_input()` on your inputs before passing them to the model. `xception_preprocess_input()` will scale input pixels between -1 and 1. 


## See Also

  

- [https://www.tensorflow.org/api_docs/python/tf/keras/applications/xception/Xception](https://www.tensorflow.org/api_docs/python/tf/keras/applications/xception/Xception) 

- [https://keras.io/api/applications/](https://keras.io/api/applications/) 

 


---
format:
  html:
    css: /reference/assets/reference.css
---

| <button class="button"> ![](/reference/assets/GitHub-Mark-32px.png){width="20"} [View source on GitHub](https://github.com/rstudio/keras//blob/main/R/layers-preprocessing.R#L123) </button> |
|:------------------------------:|:--------------------------------------:|

# layer_center_crop

## Crop the central portion of the images to target height and width

## Description
Crop the central portion of the images to target height and width 


## Usage
```r
layer_center_crop(object, height, width, ...) 
```

## Arguments
|Arguments|Description|
|---|---|
| object | What to compose the new `Layer` instance with. Typically a Sequential model or a Tensor (e.g., as returned by `layer_input()`). The return value depends on `object`. If `object` is: <br>- missing or `NULL`, the `Layer` instance is returned. <br>- a `Sequential` model, the model with an additional layer is returned. <br>- a Tensor, the output tensor from `layer_instance(object)` is returned.  |
| height | Integer, the height of the output shape. |
| width | Integer, the width of the output shape. |
| ... | standard layer arguments. |

## Details

Input shape: 3D (unbatched) or 4D (batched) tensor with shape: `(..., height, width, channels)`, in `"channels_last"` format. 

Output shape: 3D (unbatched) or 4D (batched) tensor with shape: `(..., target_height, target_width, channels)`. 

If the input height/width is even and the target height/width is odd (or inversely), the input image is left-padded by 1 pixel. 





## See Also

- [https://www.tensorflow.org/api_docs/python/tf/keras/layers/CenterCrop](https://www.tensorflow.org/api_docs/python/tf/keras/layers/CenterCrop)

- [https://keras.io/api/layers/preprocessing_layers/image_preprocessing/center_crop](https://keras.io/api/layers/preprocessing_layers/image_preprocessing/center_crop)

Other image preprocessing layers:  `layer_rescaling()`, `layer_resizing()`

Other preprocessing layers:  `layer_category_encoding()`, `layer_discretization()`, `layer_hashing()`, `layer_integer_lookup()`, `layer_normalization()`, `layer_random_brightness()`, `layer_random_contrast()`, `layer_random_crop()`, `layer_random_flip()`, `layer_random_height()`, `layer_random_rotation()`, `layer_random_translation()`, `layer_random_width()`, `layer_random_zoom()`, `layer_rescaling()`, `layer_resizing()`, `layer_string_lookup()`, `layer_text_vectorization()`


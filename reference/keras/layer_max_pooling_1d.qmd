---
format:
  html:
    css: /reference/assets/reference.css
---

| <button class="button"> ![](/reference/assets/GitHub-Mark-32px.png){width="20"} [View source on GitHub](https://github.com/rstudio/keras//blob/main/R/layers-pooling.R#L27) </button> |
|:------------------------------:|:--------------------------------------:|

# layer_max_pooling_1d

## Max pooling operation for temporal data.

## Description
Max pooling operation for temporal data. 


## Usage
```r
layer_max_pooling_1d( 
  object, 
  pool_size = 2L, 
  strides = NULL, 
  padding = "valid", 
  data_format = "channels_last", 
  batch_size = NULL, 
  name = NULL, 
  trainable = NULL, 
  weights = NULL 
) 
```

## Arguments
|Arguments|Description|
|---|---|
| object | What to compose the new `Layer` instance with. Typically a Sequential model or a Tensor (e.g., as returned by `layer_input()`). The return value depends on `object`. If `object` is: <br>- missing or `NULL`, the `Layer` instance is returned. <br>- a `Sequential` model, the model with an additional layer is returned. <br>- a Tensor, the output tensor from `layer_instance(object)` is returned.  |
| pool_size | Integer, size of the max pooling windows. |
| strides | Integer, or NULL. Factor by which to downscale. E.g. 2 will halve the input. If NULL, it will default to `pool_size`. |
| padding | One of `"valid"` or `"same"` (case-insensitive). |
| data_format | A string, one of "channels_last" (default) or "channels_first". The ordering of the dimensions in the inputs. channels_last corresponds to inputs with shape `(batch, steps, features)`<br>while channels_first corresponds to inputs with shape `(batch, features, steps)`. |
| batch_size | Fixed batch size for layer |
| name | An optional name string for the layer. Should be unique in a model (do not reuse the same name twice). It will be autogenerated if it isn't provided. |
| trainable | Whether the layer weights will be updated during training. |
| weights | Initial weights for layer. |


## Section

## Input Shape

If data_format='channels_last': 3D tensor with shape `(batch_size, steps, features)`. If data_format='channels_first': 3D tensor with shape `(batch_size, features, steps)`. 

## Output shape

If data_format='channels_last': 3D tensor with shape `(batch_size, downsampled_steps, features)`. If data_format='channels_first': 3D tensor with shape `(batch_size, features, downsampled_steps)`. 




## See Also
Other pooling layers:  `layer_average_pooling_1d()`, `layer_average_pooling_2d()`, `layer_average_pooling_3d()`, `layer_global_average_pooling_1d()`, `layer_global_average_pooling_2d()`, `layer_global_average_pooling_3d()`, `layer_global_max_pooling_1d()`, `layer_global_max_pooling_2d()`, `layer_global_max_pooling_3d()`, `layer_max_pooling_2d()`, `layer_max_pooling_3d()`


{
  "hash": "1c78c5fb5b13b6533515d61d0dd57c6b",
  "result": {
    "markdown": "---\nexecute:\n  freeze: true\n---\n\n\n[R/generics.R](https://github.com/rstudio/tensorflow//blob/main/R/generics.R#L743) \n\n# as_tensor\n\n## as_tensor\n\n## Description\n\n Coerce objects to tensorflow tensors (potentially of a specific dtype or shape). The provided default methods will call [`tf$convert_to_tensor`](https://www.tensorflow.org/api_docs/python/tf/convert_to_tensor). Depending on arguments supplied it may also call some combination of  \n\n- [`tf$saturate_cast`](https://www.tensorflow.org/api_docs/python/tf/dtypes/saturate_cast) or [`tf$cast`](https://www.tensorflow.org/api_docs/python/tf/cast) \n\n- [`tf$fill`](https://www.tensorflow.org/api_docs/python/tf/fill) or [`tf$reshape`](https://www.tensorflow.org/api_docs/python/tf/reshape) \n\n \n\n\n## Usage\n```r\n \nas_tensor(x, dtype = NULL, ..., name = NULL) \n \n## S3 method for class 'default'\nas_tensor(x, dtype = NULL, ..., shape = NULL, name = NULL) \n \n## S3 method for class 'double'\nas_tensor(x, dtype = NULL, ..., name = NULL) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| x | object to convert |\n| dtype | `NULL`, a tensorflow dtype (`tf$int32`), or something coercible to one (e.g. a string `\"int32\"`) |\n| ...,  | ignored |\n| name | `NULL` or a string. Useful for debugging in graph mode, ignored while in eager mode. |\n| shape | an integer vector, tensor, or `tf.TensorShape`. Can contain up to 1 unspecified dimension, encoded as a `-1` or `NA`. This will reshape `x` using row-major (C-style) semantics. It will prefer reshaping using non-graph operations if possible, but will otherwise invoke `tf$reshape()`. If `x` is a scalar and the requested `shape` is fully defined or a tensor, the value of `x` will be recycled to fill a tensor of the requested shape (it will dispatch to `tf$fill()`). |\n\n\n\n## Value\n a tensorflow tensor \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\n \nas_tensor(42, \"int32\") \nas_tensor(as_tensor(42)) \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
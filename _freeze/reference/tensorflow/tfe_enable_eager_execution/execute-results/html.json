{
  "hash": "ff17022e72908304c8d0efbdbebc75e2",
  "result": {
    "markdown": "---\nexecute:\n  freeze: true\n---\n\n\n[R/deprecated.R](https://github.com/rstudio/tensorflow//blob/main/R/deprecated.R#L39) \n\n# tfe_enable_eager_execution\n\n## (Deprecated) Enables, for the rest of the lifetime of this program, eager execution.\n\n## Description\n This function is no longer needed since Tensorflow 2.0, when eager execution became the default. \n\n\n## Usage\n```r\n \ntfe_enable_eager_execution( \n  config = NULL, \n  device_policy = c(\"explicit\", \"warn\", \"silent\") \n) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| config | (Optional) A `tf$ConfigProto()` protocol buffer with configuration options for the Context. Note that a lot of these options may be currently unimplemented or irrelevant when eager execution is enabled. |\n| device_policy | (Optional) What policy to use when trying to run an operation on a device with inputs which are not on that device. Valid values: \"explicit\": raises an error if the placement is not correct. \"warn\": copies the tensors which are not on the right device but raises a warning. \"silent\": silently copies the tensors. This might hide performance problems. |\n\n## Details\n If not called immediately on startup risks creating breakage and bugs.  After eager execution is enabled, operations are executed as they are defined and tensors hold concrete values, and can be accessed as R matrices or arrays with `as.matrix()`, `as.array()`, `as.double()`, etc. \n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\n# load tensorflow and enable eager execution \nlibrary(tensorflow) \ntfe_enable_eager_execution() \n \n# create a random 10x10 matrix \nx <- tf$random$normal(shape(10, 10)) \n \n# use it in R via as.matrix() \nheatmap(as.matrix(x)) \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
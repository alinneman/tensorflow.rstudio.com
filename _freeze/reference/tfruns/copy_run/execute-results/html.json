{
  "hash": "0e42b7193f87e1ae36b99335046585c9",
  "result": {
    "markdown": "---\nformat:\n  html:\n    css: /reference/assets/reference.css\n---\n\n\n| <button class=\"button\"> ![](/reference/assets/GitHub-Mark-32px.png){width=\"20\"} [View source on GitHub](https://github.com/rstudio/tfruns//blob/main/R/copy.R) </button> | <button class=\"button\"> ![](/reference/assets/GitHub-Mark-32px.png){width=\"20\"} [Suggest edits on GitHub](https://github.com/rstudio/tfruns//edit/main/R/copy.R) </button> |\n|:------------------------------:|:--------------------------------------:|\n\n*R/copy.R*\n\n# copy_run\n\n## Copy run directories\n\n## Description\nFunctions for exporting/copying run directories and run artifact files. \n\n\n## Usage\n```r\ncopy_run(run_dir, to = \".\", rename = NULL) \ncopy_run_files(run_dir, to = \".\", rename = NULL) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| run_dir | Training run directory or data frame returned from `ls_runs()`. |\n| to | Name of parent directory to copy run(s) into. Defaults to the current working directory. |\n| rename | Rename run directory after copying. If not specified this defaults to the basename of the run directory (e.g. \"2017-09-24T10-54-00Z\"). |\n\n## Details\n\nUse `copy_run` to copy one or more run directories. \n\nUse `copy_run_files` to copy only files saved/generated by training run scripts (e.g. saved models, checkpoints, etc.). \n\n\n## Value\nLogical vector indicating which operation succeeded for each of the run directories specified. \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\n# export a run directory to the current working directory \ncopy_run(\"runs/2017-09-24T10-54-00Z\") \n# export to the current working directory then rename \ncopy_run(\"runs/2017-09-24T10-54-00Z\", rename = \"best-run\") \n# export artifact files only to the current working directory then rename \ncopy_run_files(\"runs/2017-09-24T10-54-00Z\", rename = \"best-model\") \n# export 3 best eval_acc to a \"best-runs\" directory \ncopy_run(ls_runs(order = eval_acc)[1:3,], to = \"best-runs\") \n```\n:::\n\n\n## See Also\nOther run management:  `clean_runs()`\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "f6fe83d7b991e46b8b5a096726d6138e",
  "result": {
    "markdown": "---\nformat:\n  html:\n    css: /reference/assets/reference.css\n---\n\n\n| <button class=\"button\"> ![](/reference/assets/GitHub-Mark-32px.png){width=\"20\"} [View source on GitHub](https://github.com/rstudio/tfruns//blob/main/R/clean_runs.R) </button> | <button class=\"button\"> ![](/reference/assets/GitHub-Mark-32px.png){width=\"20\"} [Suggest edits on GitHub](https://github.com/rstudio/tfruns//edit/main/R/clean_runs.R) </button> |\n|:------------------------------:|:--------------------------------------:|\n\n*R/clean_runs.R*\n\n# clean_runs\n\n## Clean run directories\n\n## Description\nRemove run directories from the filesystem. \n\n\n## Usage\n```r\nclean_runs( \n  runs = ls_runs(runs_dir = runs_dir), \n  runs_dir = getOption(\"tfruns.runs_dir\", \"runs\"), \n  confirm = interactive() \n) \npurge_runs( \n  runs_dir = getOption(\"tfruns.runs_dir\", \"runs\"), \n  confirm = interactive() \n) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| runs | Runs to clean. Can be specified as a data frame (as returned by `ls_runs()`) or as a character vector of run directories. |\n| runs_dir | Directory containing runs. Defaults to \"runs\" beneath the current working directory (or to the value of the `tfruns.runs_dir` R option if specified). |\n| confirm | `TRUE` to confirm before performing operation |\n\n## Details\n\nThe `clean_runs()` function moves the specified runs (by default, all runs) into an \"archive\" subdirectory of the \"runs\" directory. \n\nThe `purge_runs()` function permanently deletes the \"archive\" subdirectory. \n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_runs(ls_runs(completed == FALSE)) \n```\n:::\n\n\n## See Also\nOther run management:  `copy_run()`\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
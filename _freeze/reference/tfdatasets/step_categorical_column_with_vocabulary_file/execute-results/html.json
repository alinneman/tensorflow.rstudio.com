{
  "hash": "58671770494474f0bd4d165423cd7762",
  "result": {
    "markdown": "---\nexecute:\n  freeze: true\n---\n\n\n[R/feature_spec.R](https://github.com/rstudio/tfdatasets//blob/main/R/feature_spec.R#L1408) \n\n# step_categorical_column_with_vocabulary_file\n\n## Creates a categorical column with vocabulary file\n\n## Description\n Use this function when the vocabulary of a categorical variable is written to a file. \n\n\n## Usage\n```r\n \nstep_categorical_column_with_vocabulary_file( \n  spec, \n  ..., \n  vocabulary_file, \n  vocabulary_size = NULL, \n  dtype = tf$string, \n  default_value = NULL, \n  num_oov_buckets = 0L \n) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| spec | A feature specification created with `feature_spec()`. |\n| ... | Comma separated list of variable names to apply the step. selectors can also be used. |\n| vocabulary_file | The vocabulary file name. |\n| vocabulary_size | Number of the elements in the vocabulary. This must be no greater than length of `vocabulary_file`, if less than length, later values are ignored. If None, it is set to the length of `vocabulary_file`. |\n| dtype | The type of features. Only string and integer types are supported. |\n| default_value | The integer ID value to return for out-of-vocabulary feature values, defaults to `-1`. This can not be specified with a positive `num_oov_buckets`. |\n| num_oov_buckets | Non-negative integer, the number of out-of-vocabulary buckets. All out-of-vocabulary inputs will be assigned IDs in the range `[vocabulary_size, vocabulary_size+num_oov_buckets)` based on a hash of the input value. A positive `num_oov_buckets` can not be specified with default_value. |\n\n\n\n## Value\n a `FeatureSpec` object. \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tfdatasets) \ndata(hearts) \nfile <- tempfile() \nwriteLines(unique(hearts$thal), file) \nhearts <- tensor_slices_dataset(hearts) %>% dataset_batch(32) \n \n# use the formula interface \nspec <- feature_spec(hearts, target ~ thal) %>% \n  step_categorical_column_with_vocabulary_file(thal, vocabulary_file = file) \n \nspec_fit <- fit(spec) \nfinal_dataset <- hearts %>% dataset_use_spec(spec_fit) \n```\n:::\n\n\n## See Also\n steps for a complete list of allowed steps.  Other Feature Spec Functions:  `dataset_use_spec()`, `feature_spec()`, `fit.FeatureSpec()`, `step_bucketized_column()`, `step_categorical_column_with_hash_bucket()`, `step_categorical_column_with_identity()`, `step_categorical_column_with_vocabulary_list()`, `step_crossed_column()`, `step_embedding_column()`, `step_indicator_column()`, `step_numeric_column()`, `step_remove_column()`, `step_shared_embeddings_column()`, `steps` \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "1f71f57848983d5612ca2d34c3d71639",
  "result": {
    "markdown": "---\nexecute:\n  freeze: true\n---\n\n\n[R/feature_spec.R](https://github.com/rstudio/tfdatasets//blob/main/R/feature_spec.R#L972) \n\n# feature_spec\n\n## Creates a feature specification.\n\n## Description\n Used to create initialize a feature columns specification. \n\n\n## Usage\n```r\n \nfeature_spec(dataset, x, y = NULL) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| dataset | A TensorFlow dataset. |\n| x | Features to include can use `tidyselect::select_helpers()` or a `formula`. |\n| y | (Optional) The response variable. Can also be specified using a `formula` in the `x` argument. |\n\n## Details\n After creating the `feature_spec` object you can add steps using the `step` functions. \n\n\n## Value\n a `FeatureSpec` object. \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tfdatasets) \ndata(hearts) \nhearts <- tensor_slices_dataset(hearts) %>% dataset_batch(32) \n \n# use the formula interface \nspec <- feature_spec(hearts, target ~ .) \n \n# select using `tidyselect` helpers \nspec <- feature_spec(hearts, x = c(thal, age), y = target) \n```\n:::\n\n\n## See Also\n\n  \n\n- `fit.FeatureSpec()` to fit the FeatureSpec \n\n- `dataset_use_spec()` to create a tensorflow dataset prepared to modeling. \n\n- steps to a list of all implemented steps. \n\n  Other Feature Spec Functions:  `dataset_use_spec()`, `fit.FeatureSpec()`, `step_bucketized_column()`, `step_categorical_column_with_hash_bucket()`, `step_categorical_column_with_identity()`, `step_categorical_column_with_vocabulary_file()`, `step_categorical_column_with_vocabulary_list()`, `step_crossed_column()`, `step_embedding_column()`, `step_indicator_column()`, `step_numeric_column()`, `step_remove_column()`, `step_shared_embeddings_column()`, `steps` \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
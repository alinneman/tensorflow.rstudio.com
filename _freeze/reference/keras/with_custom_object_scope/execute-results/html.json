{
  "hash": "f407b297e30c48c0774784310d0e95de",
  "result": {
    "markdown": "---\nformat:\n  html:\n    css: /reference/assets/reference.css\n---\n\n\n| <button class=\"button\"> ![](/reference/assets/GitHub-Mark-32px.png){width=\"20\"} [View source on GitHub](https://github.com/rstudio/keras//blob/main/R/utils.R#L176) </button> |\n|:------------------------------:|:--------------------------------------:|\n\n# with_custom_object_scope\n\n## Provide a scope with mappings of names to custom objects\n\n## Description\nProvide a scope with mappings of names to custom objects \n\n\n## Usage\n```r\nwith_custom_object_scope(objects, expr) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| objects | Named list of objects |\n| expr | Expression to evaluate |\n\n## Details\n\nThere are many elements of Keras models that can be customized with user objects (e.g. losses, metrics, regularizers, etc.). When loading saved models that use these functions you typically need to explicitily map names to user objects via the `custom_objects`\n\nparmaeter. \n\nThe `with_custom_object_scope()` function provides an alternative that lets you create a named alias for a user object that applies to an entire block of code, and is automatically recognized when loading saved models. \n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(keras)\n# define custom metric \nmetric_top_3_categorical_accuracy <- \n  custom_metric(\"top_3_categorical_accuracy\", function(y_true, y_pred) { \n    metric_top_k_categorical_accuracy(y_true, y_pred, k = 3) \n  }) \nwith_custom_object_scope(c(top_k_acc = sparse_top_k_cat_acc), { \n  # ...define model... \n  # compile model (refer to \"top_k_acc\" by name) \n  model %>% compile( \n    loss = \"binary_crossentropy\", \n    optimizer = optimizer_nadam(), \n    metrics = c(\"top_k_acc\") \n  ) \n  # save the model \n  save_model_hdf5(\"my_model.h5\") \n  # loading the model within the custom object scope doesn't \n  # require explicitly providing the custom_object \n  load_model_hdf5(\"my_model.h5\") \n}) \n```\n:::\n",
    "supporting": [
      "with_custom_object_scope_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}